<?xml version='1.0'?>
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd" [
<!ENTITY % BOOK_ENTITIES SYSTEM "${ent.filename}">
%BOOK_ENTITIES;
]>

<chapter id="running">

	<title>Running</title>
		<section id="running_the_gateway">
		<title>Running the Gateway</title>
			<procedure>
				<title>Run &THIS.PLATFORM; &THIS.APPLICATION;</title>
				<step><para>Pre-requisite: </para>
					 <substeps>
						<step><para>You must have &THIS.PLATFORM; &THIS.APPLICATION; installed as explained in the Installation Guide.</para>
						</step>	
						<step><para>If you are using the SS7 board on server, you must ensure that the <literal>java.library.path</literal> variable is set to point to the directory containing the native component. Alternatively you can copy it to the JBoss native library path manually.</para></step>
					</substeps>
				</step>
				<step>
					<para>All you have to do to start the Gateway is start the JBoss Application Server. To start the JBoss Server you must execute the <filename>run.sh</filename> (Unix) or <filename>run.bat</filename> (Microsoft Windows)
					startup script in the installation directory <filename>restcomm-gmlc-&THIS.VERSION;/jboss-5.1.0.GA/bin</filename>. Note that this will start the server in the default profile. The "default" profile is a clean profile where you start from scratch and configure the entire SS7 Stack and GMLC Gateway to suit your requirements.
					</para>
				</step>
				<step><para>Result: If the service started properly you should see the following last few output lines in the Unix terminal or Command Prompt depending on your environment:
	<screen><![CDATA[
22:23:11,583 INFO  [DeploymentMBeanImpl] (main) Installed DeployableUnitID[url=file:/home/vinu/restcomm-gmlc-<version>/jboss-5.1.0.GA/server/default/deploy/restcomm-gmlc-gateway/services-DU-6.1.5.GA.jar/]
22:23:11,874 INFO  [ServiceManagementImpl] (main) Activated ServiceID[name=restcomm-gmlc-cdr,vendor=org.mobicents,version=1.0]
22:23:11,976 ERROR [STDERR] (pool-28-thread-1) QUERRY: 000000 CREATE TABLE GMLC_GW_CDRS (ID VARCHAR(150) NOT NULL, L_SPC INT, L_SSN SMALLINT, L_RI SMALLINT, L_GT_I SMALLINT, L_GT_DIGITS VARCHAR(18), R_SPC INT, R_SSN SMALLINT, R_RI SMALLINT, R_GT_I SMALLINT, R_GT_DIGITS VARCHAR(18), SERVICE_CODE VARCHAR(10), OR_NATURE SMALLINT, OR_PLAN SMALLINT, OR_DIGITS VARCHAR(18), DE_NATURE SMALLINT, DE_PLAN SMALLINT, DE_DIGITS VARCHAR(18), ISDN_NATURE SMALLINT, ISDN_PLAN SMALLINT, ISDN_DIGITS VARCHAR(18), VLR_NATURE SMALLINT, VLR_PLAN SMALLINT, VLR_DIGITS VARCHAR(18), IMSI VARCHAR(100), TERMINATE_REASON VARCHAR(60), TSTAMP TIMESTAMP  NOT NULL , DIALOG_ID BIGINT, PRIMARY KEY(ID,TSTAMP));
22:23:12,135 INFO  [ServiceManagementImpl] (main) Activated ServiceID[name=restcomm-gmlc,vendor=org.mobicents,version=1.0]
22:23:12,395 INFO  [GMLCPropertiesManagement] (main) Loading GMLC Properties from /home/vinu/restcomm-gmlc-6.1.5.GA/jboss-5.1.0.GA/server/default/data/GMLCManagement_GMLCproperties.xml
22:23:12,395 WARN  [GMLCPropertiesManagement] (main) Failed to load the GMLC configuration file. 
/home/vinu/restcomm-gmlc-6.1.5.GA/jboss-5.1.0.GA/server/default/data/GMLCManagement_GMLCproperties.xml (No such file or directory)
22:23:12,396 INFO  [ShortCodeRoutingRuleManagement] (main) Loading short code routig rule configuration from /home/vinu/restcomm-gmlc-6.1.5.GA/jboss-5.1.0.GA/server/default/data/GMLCManagement_scroutingrule.xml
22:23:12,397 WARN  [ShortCodeRoutingRuleManagement] (main) Failed to load the short code routig rule configuration file. 
/home/vinu/restcomm-gmlc-6.1.5.GA/jboss-5.1.0.GA/server/default/data/GMLCManagement_scroutingrule.xml (No such file or directory)
22:23:12,400 INFO  [GMLCManagement] (main) Started GMLCManagement
22:23:12,419 INFO  [ShellServer] (main) Starting SS7 management shell environment
22:23:12,430 INFO  [ShellServer] (main) ShellExecutor listening at /127.0.0.1:3435
22:23:12,498 INFO  [Http11Protocol] (main) Starting Coyote HTTP/1.1 on http-127.0.0.1-8080
22:23:12,529 INFO  [AjpProtocol] (main) Starting Coyote AJP/1.3 on ajp-127.0.0.1-8009
22:23:12,541 INFO  [ServerImpl] (main) JBoss (Microcontainer) [5.1.0.GA (build: SVNTag=JBoss_5_1_0_GA date=200905221634)] Started in 1m:11s:118ms

]]>
				</screen>		
</para>
</step>
<step>
<para>If you are starting &THIS.APPLICATION.DIRNAME;-&THIS.VERSION; for the first time, SS7 is not configured. You can use either the Shell Client or the GUI to connect to &THIS.APPLICATION.DIRNAME;-&THIS.VERSION; and configure the SS7 Stack, GMLC parameters and Routing Rules. Once configured, the state and configuration of SS7 and GMLC are both persisted which stands a server re-start operation. The next chapter will discuss in detail about configuring SS7 and the GMLC Gateway.</para> 
</step>
			</procedure>
			<procedure>
				<title>Stop the Gateway</title>
				<step><para>To stop the &THIS.PLATFORM; &THIS.APPLICATION;, you must shut down the JBoss Application Server. To shut down the server(s) you must execute the <command>shutdown.sh -s</command> (Unix) or 
					<command>shutdown.bat -s</command> (Microsoft Windows) script in the installation directory <filename>restcomm-gmlc-&THIS.VERSION;/jboss-5.1.0.GA/bin</filename>.</para></step>
				<step><para> If the server stopped properly, you will see the following three lines as the 
					last output in the Unix terminal or Command Prompt:
                        <screen><![CDATA[[Server] Shutdown complete
Halting VM]]></screen></para></step>
			</procedure>		

	</section>


<section id="running_the_gateway_simulator">
		<title>Running the Gateway - Simulator Profile</title>
			<para>The &THIS.PLATFORM; &THIS.APPLICATION; offers you an option to run the Gateway with a "simulator" profile for testing purpose. The "simulator" profile is a pre-configured profile to work with the jss7-simulator. Starting the Gateway with the "simulator" profile is similar to the steps explained for the "default" profile except that you must pass the string value "simulator" to the -c command line option when invoking the run script. 
<screen><![CDATA[
[bin]$ ./run.sh -c simulator
]]>
</screen>
            </para> 
            <para> 
By default, the GMLC Simulator profile is configured for use in Linux systems. For using it in Microsoft Windows systems, you must configure the parameters as explained below.
			</para>
			<para>
Open the file  <filename>restcomm-gmlc-&lt;version&gt;/jboss-5.1.0.GA/server/simulator/data/SCTPManagement_sctp.xml</filename> and replace in two places, the parameter <literal>ipChannelType="0"</literal> with <literal>ipChannelType="1"</literal> to enable TCP connection instead of SCTP since Windows does not support SCTP. If you are using in a Linux system, there is no modification required to the settings.
			</para>  
</section>



<section id="simulator_GMLC_example">
		<title>Running GMLC Examples in Simulator</title>
		<para> If you are not familiar with the RestComm jss7 Simulator, you can find instructions about using the jss7-simulator in the &THIS.PLATFORM; jSS7 User Guide. You will also find example test cases explained in detail in the jSS7 User Guide. In this section you will find a sample GMLC Pull and GMLC Push examples explained using the jSS7 Simulator.
		</para>
			<procedure>
			<title>Running RestComm jSS7 Simulator - GMLC Pull Example</title>
			<step><para>
			Change the working directory to the bin folder in the Simulator's installation directory.
<screen><![CDATA[
[vinu@vinu-neha ~]$ cd restcomm-gmlc-<version>/tools/restcomm-ss7-simulator/bin
]]>
</screen>
			</para></step>
			<step>
						<para>
							 Ensure that the
							<filename>run.sh</filename>
							start script is executable.
<screen><![CDATA[
bin$ chmod +x run.sh
]]>
</screen>
					
						</para>
			</step>
			<step>
						<para>
							Execute the
							<filename>run.sh</filename>
							Bourne shell script with the command <literal>./run.sh gui</literal>. 
<screen><![CDATA[
bin$ ./run.sh gui
]]>
</screen>
This will launch the Simulator GUI Application.
						</para>

			</step>
			<step>
						<para>
When the GUI shows up, select "main" (default) as host name [or type "win" as host name
under Windows] and press the 'Start' button. The Simulator is already pre-configured to
connect to the GMLC Gateway (running in simulator profile). Press 'Run test' and again click
on 'Start' in the next screen. The Simulator will connect to GMLC (via m3ua protocol).
The Low level part is configured to SCTP (not TCP) protocol and hence you can test the GMLC
in a Linux environment. To test under Windows OS, you must change the SS7 simulator
settings to TCP.						
						</para>

			</step>
			<step>
						<para>
							After approximately 30 seconds you will see the state of the Simulator change to "M3UA connection is active" as in figure below:

	<figure>
  		<title>GMLC SS7 Simulator - Active</title>
  		<mediaobject>
    		<imageobject>
      			<imagedata fileref="images/GMLC_SS7_Simulator_ACTIVE.png" format="PNG" align="center"/>
    		</imageobject>
  		</mediaobject>
	</figure>
						</para>
			</step>
			<step>
						<para>
							&THIS.PLATFORM; &THIS.APPLICATION; is configured with a routing rule for *519#. Dial *519# in your Simulator GUI and press 'Send ProcessUnstructuredRequest'. The example will respond to you with the message "Hello World 1. Balance 2. Texts Remaining". 
	<figure>
  		<title>GMLC SS7 Simulator - Process Unstructured Request</title>
  		<mediaobject>
    		<imageobject>
      			<imagedata fileref="images/GMLC_SS7_Simulator_Process_Unst_request.png" format="PNG" align="center"/>
    		</imageobject>
  		</mediaobject>
	</figure>
						</para>
			</step>
			<step>
						<para>
							Now Dial 1 in your Simulator GUI and press 'Send UnstructuredResponse'. You should get a response "Thank you!". 
	<figure>
  		<title>GMLC SS7 Simulator - Unstructured Request</title>
  		<mediaobject>
    		<imageobject>
      			<imagedata fileref="images/GMLC_SS7_Simulator_Unstruc_request.png" format="PNG" align="center"/>
    		</imageobject>
  		</mediaobject>
	</figure>
						</para>
			</step>
			</procedure>		
			<procedure>
			<title>Running &THIS.PLATOFRM; GMLC Simulator (HLR) - GMLC Push Example</title>
			<step><para>


			You must first start the &THIS.PLATOFRM; &THIS.APPLICATION; in simulator profile. 
<screen><![CDATA[
[vinu@vinu-neha ~]$ cd restcomm-gmlc-<version>/jboss-5.1.0.GA/bin
[vinu@vinu-neha bin]$./run.sh -b 127.0.0.1 -c simulator
]]>
</screen>
			</para></step>
			<step><para>
To send a PUSH request go to http://localhost:8080/jmx-console/ and click the link <literal>org.mobicents.gmlc.example</literal> in the left menu. Then open the MBean <literal>'name=HttpPush'</literal>.
			</para></step>
			<step><para>
MBean provides two operations: 1) <literal>sendNotify</literal> to push Notification and 2) <literal>sendRequest</literal> to push GMLC menu based tree. The parameter <literal>Isdn</literal> is the MSISDN to which Notify or Request is to be sent. 
			</para></step>
		</procedure>
<para>
	<figure>
  		<title>RestComm GMLC Simulator - Notify</title>
  		<mediaobject>
    		<imageobject>
      			<imagedata fileref="images/Restcomm-GMLC-simulator_Notify.png" format="PNG" align="center"/>
    		</imageobject>
  		</mediaobject>
	</figure>
</para>
<para>
You can simulate a simple Notify dialog by following the below steps:
<itemizedlist>
<listitem><para>
Fill the ISDN field with a preferred ISDN number, for example "1111" is good for SS7 Simulator. Now press "Apply changes".
</para>
</listitem>
<listitem><para>
Perform "reset" operation.
</para>
</listitem>
<listitem><para>
Perform "sendNotify" operation with parameters: String=&lt;Text of your notification&gt;, boolean=false, int=60000 and String=&lt;any random string&gt;. Parameters definition is as below
	
	<itemizedlist>
		<listitem>
			<para>
				1st String is GMLC message that you want to push to mobile
			</para>
		</listitem>	
		<listitem>	
			<para>
				2nd Boolean if set to true means GMLC Gw will send empty TCAP Begin and try to establish dialog before sending actual message.
			</para>
		</listitem>		
		<listitem>	
			<para>
				3rd Int is custom invoke timeout. User must respond within this period else GMLC Gw will terminate Dialog and Application will get appropriate error message
			</para>
		</listitem>				
		<listitem>	
			<para>
				4th String is random string that is stored at GMLC Gw side as custom object. When ever response comes back, GMLC Gw will include this custom string in XML Payload.
			</para>
		</listitem>						
	</itemizedlist>
</para>
</listitem>
<listitem><para>
Perform "close" operation.
</para>
</listitem>
</itemizedlist>
You will now find a notification at the SS7 Simulator.
</para>
<para>
You can also simulate more complicated scenarios like pushing the tree based menu to user and expecting some input from users by calling <literal>sendRequest</literal>. 
The below Class provides more explanation for attributes and operations of HttpPush.
</para>
</section>




<section id="running_shell">
			<title>Running the Shell</title>	
		<para>
			You must start the Shell client and connect to the managed instance prior to executing commands to configure the Gateway. Shell can be started by issuing the following command from
			<filename>restcomm-gmlc-&THIS.VERSION;/jboss-5.1.0.GA/bin</filename> directory:
		</para>
		<programlisting>[$] ./ss7-cli.sh</programlisting>
		<para>Once console starts, it will print following information and await further commands:</para>
		<screen>
version=2.0.0-SNAPSHOT,name=mobicents CLI,prefix=restcomm,vendor=TeleStax
mobicents>
		</screen>
	<para>
			Before issuing further commands you must connect to a managed instance. For more details on connecting to an instance and for a list of all supported commands and details on configuring the SS7 stack refer to the RestComm SS7 Stack User Guide.
		</para>

</section>



<section id="connect_gui">
	<title>Connect to a new Instance</title>
	<para>You can connect to a new instance by entering the IP:Port values and the login credentials in the top left corner of the GUI. However please note that this feature is not available in this release but will be fully functional in the next release. 
	</para>

 </section>	

  <section id="gui_security">
		<title>Authentication</title>	
			<para>
				&THIS.PLATFORM; &THIS.APPLICATION; GUI Management Security is based on the JBoss Security Framework. 
				However please note that the feature is not fully functional yet and you will not be able to sign-out or sign-in using the login panel at the top right corner of the GUI. Future releases will offer a full implementation.
			</para>
			<para>As of now, there is basic authentication offered (which is based on the JBoss Security framework). When you try to start the Web Console, you will be prompted to enter login credentials. These credentials can be configured in the files <filename>jmx-console-roles.properties</filename> and <filename>jmx-console-users.properties</filename> located at <filename>restcomm-gmlc-&lt;version&gt;/jboss-5.1.0.GA/server/&lt;profile&gt;/conf/props/</filename>.
			</para>
			<para>You can also change the authentication from flat file system to database by making necessary configurations in the file <filename>restcomm-gmlc-&lt;version&gt;/jboss-5.1.0.GA/server/&lt;profile&gt;/conf/login-config.xml</filename>.
			</para>
			<para>
				For detailed instructions and to know more about JBoss Security Framework please refer to the JBoss Installation Guide 
				<ulink url="http://docs.jboss.org/jbossas/docs/Installation_And_Getting_Started_Guide/5/html_single/index.html#Basic_Configuration_Issues-Security_Service">here</ulink>.
			</para>
			<note>
				<para>
					Deafult user-id and password for GUI Management Console is admin and admin. You can change the user-id and password in files 
					<filename>jmx-console-roles.properties</filename> and <filename>jmx-console-users.properties</filename> 
					located at <filename>restcomm-gmlc-&lt;version&gt;/jboss-5.1.0.GA/server/&lt;profile&gt;/conf/props/</filename>
				</para>
			</note>			
			
 </section>


</chapter>